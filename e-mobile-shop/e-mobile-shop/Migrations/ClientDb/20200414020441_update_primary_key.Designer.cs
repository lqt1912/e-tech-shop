// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using e_mobile_shop.Models;

namespace e_mobile_shop.Migrations.ClientDb
{
    [DbContext(typeof(ClientDbContext))]
    [Migration("20200414020441_update_primary_key")]
    partial class update_primary_key
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("e_mobile_shop.Models.AspNetRoleClaims", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("e_mobile_shop.Models.AspNetRoles", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasName("RoleNameIndex")
                        .HasFilter("([NormalizedName] IS NOT NULL)");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("e_mobile_shop.Models.AspNetUserClaims", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("e_mobile_shop.Models.AspNetUserLogins", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("e_mobile_shop.Models.AspNetUserRoles", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("e_mobile_shop.Models.AspNetUserTokens", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("e_mobile_shop.Models.AspNetUsers", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("Avatar")
                        .HasColumnType("text");

                    b.Property<string>("Cmnd")
                        .HasColumnName("CMND")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DiaChi")
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<int?>("GioiTinh")
                        .HasColumnType("int");

                    b.Property<string>("HoTen")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTime?>("NgaySinh")
                        .HasColumnType("date");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasName("UserNameIndex")
                        .HasFilter("([NormalizedUserName] IS NOT NULL)");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("e_mobile_shop.Models.BinhLuan", b =>
                {
                    b.Property<string>("DaTraLoi")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(1)")
                        .HasDefaultValueSql("('C')")
                        .IsFixedLength(true)
                        .HasMaxLength(1)
                        .IsUnicode(false);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("HoTen")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int>("MaBl")
                        .HasColumnName("MaBL")
                        .HasColumnType("int");

                    b.Property<string>("MaKh")
                        .HasColumnName("MaKH")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("MaSp")
                        .HasColumnName("MaSP")
                        .HasColumnType("nchar(5)")
                        .IsFixedLength(true)
                        .HasMaxLength(5);

                    b.Property<DateTime?>("NgayDang")
                        .HasColumnType("datetime");

                    b.Property<string>("NoiDung")
                        .HasColumnType("ntext");

                    b.Property<int?>("Parent")
                        .HasColumnType("int");

                    b.ToTable("BinhLuan");
                });

            modelBuilder.Entity("e_mobile_shop.Models.ChiTietDonHang", b =>
                {
                    b.Property<string>("MaDh")
                        .IsRequired()
                        .HasColumnName("MaDH")
                        .HasColumnType("nchar(5)")
                        .IsFixedLength(true)
                        .HasMaxLength(5);

                    b.Property<string>("MaSp")
                        .IsRequired()
                        .HasColumnName("MaSP")
                        .HasColumnType("nchar(5)")
                        .IsFixedLength(true)
                        .HasMaxLength(5);

                    b.Property<int?>("SoLuong")
                        .HasColumnType("int");

                    b.Property<decimal?>("ThanhTien")
                        .HasColumnType("decimal(18, 0)");

                    b.ToTable("ChiTietDonHang");
                });

            modelBuilder.Entity("e_mobile_shop.Models.DonHang", b =>
                {
                    b.Property<string>("Diachi")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Dienthoai")
                        .HasColumnType("nchar(15)")
                        .IsFixedLength(true)
                        .HasMaxLength(15);

                    b.Property<string>("Ghichu")
                        .HasColumnType("text");

                    b.Property<string>("MaDh")
                        .IsRequired()
                        .HasColumnName("MaDH")
                        .HasColumnType("nchar(5)")
                        .IsFixedLength(true)
                        .HasMaxLength(5);

                    b.Property<string>("MaKh")
                        .IsRequired()
                        .HasColumnName("MaKH")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<DateTime?>("NgayDatMua")
                        .HasColumnType("datetime");

                    b.Property<decimal?>("PhiVanChuyen")
                        .HasColumnType("decimal(18, 0)");

                    b.Property<string>("PtgiaoDich")
                        .HasColumnName("PTGiaoDich")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<int?>("TinhTrangDh")
                        .HasColumnName("TinhTrangDH")
                        .HasColumnType("int");

                    b.Property<double?>("Tongtien")
                        .HasColumnType("float");

                    b.ToTable("DonHang");
                });

            modelBuilder.Entity("e_mobile_shop.Models.LoaiSp", b =>
                {
                    b.Property<string>("MaLoai")
                        .IsRequired()
                        .HasColumnType("nchar(5)")
                        .IsFixedLength(true)
                        .HasMaxLength(5);

                    b.Property<string>("TenLoai")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.ToTable("LoaiSp");
                });

            modelBuilder.Entity("e_mobile_shop.Models.SanPham", b =>
                {
                    b.Property<string>("AnhDaiDien")
                        .HasColumnType("ntext");

                    b.Property<string>("AnhKhac")
                        .HasColumnType("ntext");

                    b.Property<string>("AnhNen")
                        .HasColumnType("ntext");

                    b.Property<decimal?>("GiaGoc")
                        .HasColumnType("decimal(18, 0)");

                    b.Property<decimal?>("GiaTien")
                        .HasColumnType("decimal(18, 0)");

                    b.Property<string>("HangSx")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("HangSX")
                        .HasColumnType("nchar(5)")
                        .HasDefaultValueSql("('NOTTT')")
                        .IsFixedLength(true)
                        .HasMaxLength(5);

                    b.Property<bool?>("Ishot")
                        .HasColumnName("ishot")
                        .HasColumnType("bit");

                    b.Property<bool?>("Isnew")
                        .HasColumnName("isnew")
                        .HasColumnType("bit");

                    b.Property<string>("LoaiSp")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("LoaiSP")
                        .HasColumnType("nchar(5)")
                        .HasDefaultValueSql("('NOTTT')")
                        .IsFixedLength(true)
                        .HasMaxLength(5);

                    b.Property<string>("MaSp")
                        .IsRequired()
                        .HasColumnName("MaSP")
                        .HasColumnType("nchar(5)")
                        .IsFixedLength(true)
                        .HasMaxLength(5);

                    b.Property<string>("MoTa")
                        .HasColumnType("ntext");

                    b.Property<int?>("SoLuong")
                        .HasColumnType("int");

                    b.Property<int?>("SoLuotXemSp")
                        .HasColumnName("SoLuotXemSP")
                        .HasColumnType("int");

                    b.Property<string>("TenSp")
                        .IsRequired()
                        .HasColumnName("TenSP")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("XuatXu")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.ToTable("SanPham");
                });

            modelBuilder.Entity("e_mobile_shop.Models.ThongSoKiThuat", b =>
                {
                    b.Property<string>("GiaTri")
                        .IsRequired()
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("MaSp")
                        .IsRequired()
                        .HasColumnName("MaSP")
                        .HasColumnType("nchar(5)")
                        .IsFixedLength(true)
                        .HasMaxLength(5);

                    b.Property<string>("ThuocTinh")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.ToTable("ThongSoKiThuat");
                });

            modelBuilder.Entity("e_mobile_shop.Models.AspNetRoleClaims", b =>
                {
                    b.HasOne("e_mobile_shop.Models.AspNetRoles", "Role")
                        .WithMany("AspNetRoleClaims")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("e_mobile_shop.Models.AspNetUserClaims", b =>
                {
                    b.HasOne("e_mobile_shop.Models.AspNetUsers", "User")
                        .WithMany("AspNetUserClaims")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("e_mobile_shop.Models.AspNetUserLogins", b =>
                {
                    b.HasOne("e_mobile_shop.Models.AspNetUsers", "User")
                        .WithMany("AspNetUserLogins")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("e_mobile_shop.Models.AspNetUserRoles", b =>
                {
                    b.HasOne("e_mobile_shop.Models.AspNetRoles", "Role")
                        .WithMany("AspNetUserRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("e_mobile_shop.Models.AspNetUsers", "User")
                        .WithMany("AspNetUserRoles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("e_mobile_shop.Models.AspNetUserTokens", b =>
                {
                    b.HasOne("e_mobile_shop.Models.AspNetUsers", "User")
                        .WithMany("AspNetUserTokens")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
